/* Generated By:JavaCC: Do not edit this line. AssemblerConstants.java */
package org.z64sim.assembler;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AssemblerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int COMMENT = 2;
  /** RegularExpression Id. */
  int LOCATION_COUNTER = 3;
  /** RegularExpression Id. */
  int DATA_SECTION = 4;
  /** RegularExpression Id. */
  int CODE_SECTION = 5;
  /** RegularExpression Id. */
  int BSS_SECTION = 6;
  /** RegularExpression Id. */
  int PROGRAM_END = 7;
  /** RegularExpression Id. */
  int EQU_ASSIGN = 8;
  /** RegularExpression Id. */
  int BYTE_ASSIGN = 9;
  /** RegularExpression Id. */
  int WORD_ASSIGN = 10;
  /** RegularExpression Id. */
  int LONG_ASSIGN = 11;
  /** RegularExpression Id. */
  int QUAD_ASSIGN = 12;
  /** RegularExpression Id. */
  int ASCII_ASSIGN = 13;
  /** RegularExpression Id. */
  int FILL_ASSIGN = 14;
  /** RegularExpression Id. */
  int COMM_ASSIGN = 15;
  /** RegularExpression Id. */
  int DRIVER = 16;
  /** RegularExpression Id. */
  int SCALE = 17;
  /** RegularExpression Id. */
  int CONSTANT = 18;
  /** RegularExpression Id. */
  int NUMBER = 19;
  /** RegularExpression Id. */
  int DEC = 20;
  /** RegularExpression Id. */
  int HEX = 21;
  /** RegularExpression Id. */
  int ASSIGN = 22;
  /** RegularExpression Id. */
  int PLUS = 23;
  /** RegularExpression Id. */
  int MINUS = 24;
  /** RegularExpression Id. */
  int TIMES = 25;
  /** RegularExpression Id. */
  int DIVIDE = 26;
  /** RegularExpression Id. */
  int LBRACE = 27;
  /** RegularExpression Id. */
  int RBRACE = 28;
  /** RegularExpression Id. */
  int COMMA = 29;
  /** RegularExpression Id. */
  int REG_8 = 30;
  /** RegularExpression Id. */
  int REG_16 = 31;
  /** RegularExpression Id. */
  int REG_32 = 32;
  /** RegularExpression Id. */
  int REG_64 = 33;
  /** RegularExpression Id. */
  int INSN_0 = 34;
  /** RegularExpression Id. */
  int INSN_0_WQ = 35;
  /** RegularExpression Id. */
  int INSN_0_NOSUFF = 36;
  /** RegularExpression Id. */
  int INSN_1_S = 37;
  /** RegularExpression Id. */
  int INSN_LEA = 38;
  /** RegularExpression Id. */
  int INSN_1_E = 39;
  /** RegularExpression Id. */
  int INSN_SHIFT = 40;
  /** RegularExpression Id. */
  int INSN_1_M = 41;
  /** RegularExpression Id. */
  int INSN_JC = 42;
  /** RegularExpression Id. */
  int INSN_B_E = 43;
  /** RegularExpression Id. */
  int INSN_EXT = 44;
  /** RegularExpression Id. */
  int INSN_IN = 45;
  /** RegularExpression Id. */
  int INSN_OUT = 46;
  /** RegularExpression Id. */
  int INSN_IO_S = 47;
  /** RegularExpression Id. */
  int LABEL = 48;
  /** RegularExpression Id. */
  int STRING_LITERAL = 49;
  /** RegularExpression Id. */
  int ERROR = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<COMMENT>",
    "<LOCATION_COUNTER>",
    "\".data\"",
    "\".text\"",
    "\".bss\"",
    "\".end\"",
    "\".equ\"",
    "\".byte\"",
    "\".word\"",
    "\".long\"",
    "\".quad\"",
    "\".ascii\"",
    "\".fill\"",
    "\".comm\"",
    "<DRIVER>",
    "<SCALE>",
    "<CONSTANT>",
    "<NUMBER>",
    "<DEC>",
    "<HEX>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "<REG_8>",
    "<REG_16>",
    "<REG_32>",
    "<REG_64>",
    "<INSN_0>",
    "<INSN_0_WQ>",
    "<INSN_0_NOSUFF>",
    "\"int\"",
    "<INSN_LEA>",
    "<INSN_1_E>",
    "<INSN_SHIFT>",
    "<INSN_1_M>",
    "<INSN_JC>",
    "<INSN_B_E>",
    "<INSN_EXT>",
    "<INSN_IN>",
    "<INSN_OUT>",
    "<INSN_IO_S>",
    "<LABEL>",
    "<STRING_LITERAL>",
    "<ERROR>",
    "\"@\"",
  };

}
