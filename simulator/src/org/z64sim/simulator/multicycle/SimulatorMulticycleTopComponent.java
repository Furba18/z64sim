/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.z64sim.simulator.multicycle;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.z64sim.simulator.multicycle//SimulatorMulticycle//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "SimulatorMulticycleTopComponent",
        iconBase = "org/z64sim/simulator/multicycle/multicycle.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = false)
@ActionID(category = "Window", id = "org.z64sim.simulator.multicycle.SimulatorMulticycleTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_SimulatorMulticycleAction",
        preferredID = "SimulatorMulticycleTopComponent"
)
@Messages({
    "CTL_SimulatorMulticycleAction=SimulatorMulticycle",
    "CTL_SimulatorMulticycleTopComponent=SimulatorMulticycle Window",
    "HINT_SimulatorMulticycleTopComponent=This is a SimulatorMulticycle window"
})
public final class SimulatorMulticycleTopComponent extends TopComponent {

    public SimulatorMulticycleTopComponent() {
        initComponents();
        setName(Bundle.CTL_SimulatorMulticycleTopComponent());
        setToolTipText(Bundle.HINT_SimulatorMulticycleTopComponent());
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        multicycleToolbar = new javax.swing.JToolBar();
        run = new javax.swing.JButton();
        step = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel9 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        sliderSpeed = new javax.swing.JLabel();
        Registers = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        RAX = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        RCX = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        RDX = new javax.swing.JTextField();
        RBX = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        RSP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        RBP = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        RSI = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        RDI = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        RIP = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        OF = new javax.swing.JCheckBox();
        DF = new javax.swing.JCheckBox();
        IF = new javax.swing.JCheckBox();
        SF = new javax.swing.JCheckBox();
        ZF = new javax.swing.JCheckBox();
        PF = new javax.swing.JCheckBox();
        CF = new javax.swing.JCheckBox();
        FLAGS = new javax.swing.JTextField();

        multicycleToolbar.setRollover(true);

        run.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/z64sim/simulator/run24.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(run, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.run.text")); // NOI18N
        run.setToolTipText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.run.toolTipText")); // NOI18N
        run.setFocusable(false);
        run.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        run.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        multicycleToolbar.add(run);

        step.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/z64sim/simulator/step24.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(step, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.step.text")); // NOI18N
        step.setToolTipText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.step.toolTipText")); // NOI18N
        step.setActionCommand(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.step.actionCommand")); // NOI18N
        step.setFocusable(false);
        step.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        step.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        step.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepActionPerformed(evt);
            }
        });
        multicycleToolbar.add(step);
        multicycleToolbar.add(jSeparator1);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel9.text")); // NOI18N
        multicycleToolbar.add(jLabel9);

        jSlider1.setToolTipText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jSlider1.toolTipText")); // NOI18N
        jSlider1.setValue(100);
        multicycleToolbar.add(jSlider1);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jSlider1, org.jdesktop.beansbinding.ELProperty.create("${value}"), sliderSpeed, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        multicycleToolbar.add(sliderSpeed);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel1.text")); // NOI18N

        RAX.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RAX.text")); // NOI18N
        RAX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAXActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel2.text")); // NOI18N

        RCX.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RCX.text")); // NOI18N
        RCX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RCXActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel3.text")); // NOI18N

        RDX.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RDX.text")); // NOI18N
        RDX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDXActionPerformed(evt);
            }
        });

        RBX.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RBX.text")); // NOI18N
        RBX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBXActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel4.text")); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel5.text")); // NOI18N

        RSP.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RSP.text")); // NOI18N
        RSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RSPActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel6.text")); // NOI18N

        RBP.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RBP.text")); // NOI18N
        RBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBPActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel7.text")); // NOI18N

        RSI.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RSI.text")); // NOI18N
        RSI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RSIActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel8.text")); // NOI18N

        RDI.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RDI.text")); // NOI18N
        RDI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDIActionPerformed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel10.text")); // NOI18N
        jLabel10.setMaximumSize(new java.awt.Dimension(24, 14));
        jLabel10.setMinimumSize(new java.awt.Dimension(24, 14));
        jLabel10.setPreferredSize(new java.awt.Dimension(24, 14));

        RIP.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.RIP.text")); // NOI18N
        RIP.setEnabled(false);
        RIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RIPActionPerformed(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.jLabel11.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(OF, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.OF.text")); // NOI18N
        OF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OFActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(DF, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.DF.text")); // NOI18N
        DF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DFActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(IF, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.IF.text")); // NOI18N
        IF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IFActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(SF, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.SF.text")); // NOI18N
        SF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(ZF, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.ZF.text")); // NOI18N
        ZF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZFActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(PF, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.PF.text")); // NOI18N
        PF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(CF, org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.CF.text")); // NOI18N
        CF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CFActionPerformed(evt);
            }
        });

        FLAGS.setText(org.openide.util.NbBundle.getMessage(SimulatorMulticycleTopComponent.class, "SimulatorMulticycleTopComponent.FLAGS.text")); // NOI18N
        FLAGS.setEnabled(false);
        FLAGS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FLAGSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RegistersLayout = new javax.swing.GroupLayout(Registers);
        Registers.setLayout(RegistersLayout);
        RegistersLayout.setHorizontalGroup(
            RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegistersLayout.createSequentialGroup()
                        .addGroup(RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(RegistersLayout.createSequentialGroup()
                                .addComponent(RAX, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RCX, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RDX, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RBX, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RegistersLayout.createSequentialGroup()
                                .addComponent(RSP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(RegistersLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(OF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(DF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(IF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(SF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ZF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(PF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(CF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FLAGS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(RegistersLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RBP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RSI, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RDI))))))
                    .addGroup(RegistersLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RIP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RegistersLayout.setVerticalGroup(
            RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistersLayout.createSequentialGroup()
                .addGroup(RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(RAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(RCX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RDX, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(RSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(RBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(RSI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(RDI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegistersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(OF)
                    .addComponent(DF)
                    .addComponent(IF)
                    .addComponent(SF)
                    .addComponent(ZF)
                    .addComponent(PF)
                    .addComponent(CF)
                    .addComponent(FLAGS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(multicycleToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Registers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(multicycleToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Registers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void stepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stepActionPerformed

    private void RAXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RAXActionPerformed

    private void RCXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RCXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RCXActionPerformed

    private void RDXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RDXActionPerformed

    private void RBXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RBXActionPerformed

    private void RSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RSPActionPerformed

    private void RBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RBPActionPerformed

    private void RSIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RSIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RSIActionPerformed

    private void RDIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RDIActionPerformed

    private void RIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RIPActionPerformed

    private void OFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OFActionPerformed

    private void DFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DFActionPerformed

    private void IFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IFActionPerformed

    private void SFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SFActionPerformed

    private void ZFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZFActionPerformed

    private void PFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PFActionPerformed

    private void CFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CFActionPerformed

    private void FLAGSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FLAGSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FLAGSActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CF;
    private javax.swing.JCheckBox DF;
    private javax.swing.JTextField FLAGS;
    private javax.swing.JCheckBox IF;
    private javax.swing.JCheckBox OF;
    private javax.swing.JCheckBox PF;
    private javax.swing.JTextField RAX;
    private javax.swing.JTextField RBP;
    private javax.swing.JTextField RBX;
    private javax.swing.JTextField RCX;
    private javax.swing.JTextField RDI;
    private javax.swing.JTextField RDX;
    private javax.swing.JTextField RIP;
    private javax.swing.JTextField RSI;
    private javax.swing.JTextField RSP;
    private javax.swing.JPanel Registers;
    private javax.swing.JCheckBox SF;
    private javax.swing.JCheckBox ZF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSlider jSlider1;
    public javax.swing.JToolBar multicycleToolbar;
    public javax.swing.JButton run;
    private javax.swing.JLabel sliderSpeed;
    public javax.swing.JButton step;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
